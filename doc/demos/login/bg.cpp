////////////////////////////////////////////////////////////////////////
// bg.cpp
// generated with ecppc
//

#include <tnt/mbcomponent.h>
#include <tnt/httprequest.h>
#include <tnt/httpreply.h>
#include <tnt/httpheader.h>
#include <tnt/http.h>
#include <tnt/data.h>
#include <tnt/componentfactory.h>
#include <cxxtools/log.h>
#include <stdexcept>

// <%pre>
// </%pre>

namespace
{
class _component_ : public tnt::MbComponent
{
    _component_& main()  { return *this; }

  protected:
    ~_component_();

  public:
    _component_(const tnt::Compident& ci, const tnt::Urlmapper& um, tnt::Comploader& cl);

};

static tnt::ComponentFactoryImpl<_component_> Factory("bg");

static const char* rawData = "\010\000\000\000\271\002\000\000\377\330\377\340\000\020JFIF\000\001\001\001\000H\000H"
  "\000\000\377\333\000C\000\003\002\002\003\002\002\003\003\003\003\004\003\003\004\005\010\005\005\004\004\005\n\007"
  "\007\006\010\014\n\014\014\013\n\013\013\015\016\022\020\015\016\021\016\013\013\020\026\020\021\023\024\025\025\025"
  "\014\017\027\030\026\024\030\022\024\025\024\377\333\000C\001\003\004\004\005\004\005\t\005\005\t\024\015\013\015\024"
  "\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024"
  "\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\377\302\000\021\010\000$\000$\003"
  "\001\021\000\002\021\001\003\021\001\377\304\000\027\000\001\001\001\001\000\000\000\000\000\000\000\000\000\000\000"
  "\000\000\002\001\010\377\304\000\024\001\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\332"
  "\000\014\003\001\000\002\020\003\020\000\000\001\352\"\000,\222@(\303\0004\242@(\322@(\377\304\000\026\020\001\001"
  "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\0210 \377\332\000\010\001\001\000\001\005\002\223\206\177"
  "\377\304\000\024\021\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\377\332\000\010\001\003\001\001"
  "\?\001O\377\304\000\024\021\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\377\332\000\010\001\002"
  "\001\001\?\001O\377\304\000\026\020\001\001\001\000\000\000\000\000\000\000\000\000\000\000\000\000 A@\377\332\000"
  "\010\001\001\000\006\?\0024\134\037\377\304\000\034\020\000\002\003\000\003\001\000\000\000\000\000\000\000\000\000"
  "\000\000\021!A\201\001\0201\360\377\332\000\010\001\001\000\001\?!c\214\034`\343\006 \242\374\024_\202\213\360A>\344q"
  "\203\214\034`\237rI+\tXJ\302z\254+\n\316\277\377\332\000\014\003\001\000\002\000\003\000\000\000\020\022@$\202\000 "
  "\000\010\000\237\377\304\000\024\021\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\377\332\000\010"
  "\001\003\001\001\?\020O\377\304\000\024\021\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\377\332"
  "\000\010\001\002\001\001\?\020O\377\304\000$\020\000\001\003\002\005\005\001\000\000\000\000\000\000\000\000\000\021"
  "\000\0011!Aaq\201\241\341\020Q\221\261\301\361\377\332\000\010\001\001\000\001\?\020\034|:f\034\306\331\246a\314m\232"
  "f\034\306\331\241\307\303\243\3752\"\366\"/b\"\366#\3752\304\334\204\264K\241-\022\350KD\272\304\334\217n\334\246rR"
  "\201nS9)@\267)\234\224\240[\224{v\347\243O/\324\323\313\3654\362\375\351\377\331";

static const char* mimetype = "image/jpeg";
static const char* c_time = "Sat, 21 Feb 2015 16:06:45 GMT";

_component_::_component_(const tnt::Compident& ci, const tnt::Urlmapper& um, tnt::Comploader& cl)
  : MbComponent(ci, um, cl, ::rawData, ::mimetype, ::c_time)
{ }

_component_::~_component_()
{ }

} // namespace
